package main

import (
	"encoding/json"
	"fmt"
	"os"
)

func Add(a int, b int) int {
	return a + b
}

func main() {
	fmt.Println("üöÄ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!")

	fmt.Println("–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!")
	result := Add(2, 3)
	fmt.Println("2 + 3 =", result)

	// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É
	dir, _ := os.Getwd()
	fmt.Println("–¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞:", dir)

	// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
	if _, err := os.Stat("data.json"); os.IsNotExist(err) {
		fmt.Println("‚ùå –§–∞–π–ª data.json –ù–ï –ù–ê–ô–î–ï–ù –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ!")
		fmt.Println("–ò—â—É –≤:", dir)
		return
	}
	fmt.Println("‚úÖ –§–∞–π–ª data.json –Ω–∞–π–¥–µ–Ω")

	// 3. –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
	file, err := os.ReadFile("data.json")
	if err != nil {
		fmt.Println("‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞:", err)
		return
	}
	fmt.Println("‚úÖ –§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω, —Ä–∞–∑–º–µ—Ä:", len(file), "–±–∞–π—Ç")

	// 4. –ü–æ–∫–∞–∂–µ–º —Å—ã—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
	fmt.Println("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞:")
	fmt.Println(string(file))

	// 5. –ü–∞—Ä—Å–∏–º JSON
	var users []map[string]interface{}
	if err := json.Unmarshal(file, &users); err != nil {
		fmt.Println("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:", err)
		return
	}

	// 6. –í—ã–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
	fmt.Println("‚úÖ JSON —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
	fmt.Println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", len(users))

	if len(users) == 0 {
		fmt.Println("‚ö†Ô∏è  –ú–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç–æ–π!")
		return
	}

	fmt.Println("–î–∞–Ω–Ω—ã–µ –∏–∑ data.json:")
	for i, user := range users {
		fmt.Printf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %d: %v\n", i+1, user)
	}
}
